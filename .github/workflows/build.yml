name: "Build Ubuntu RootFS"
run-name: >
  ${{ github.event_name == 'push' && format('Commit: {0}', github.event.head_commit.message) 
  || github.event_name == 'pull_request' && format('PR: {0}', github.event.pull_request.title) 
  || format('Manual build: {0}', github.event.inputs.distributions) }}

on:
  workflow_dispatch:
    inputs:
      distributions:
        description: 'Space-separated list of distributions to build'
        required: true
        default: 'ubuntu'
  push:
    branches:
      - master
    paths:
      - 'distro-build/**'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 🧾 Prepare Distribution List
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "${{ github.event.inputs.distributions }}" > ./distributions.txt
          else
            git diff-tree --no-commit-id --name-only HEAD -r | grep distro-build | sed 's@\(distro-build/\|.sh\)@@g' > ./distributions.txt
          fi
          echo "Building distros:"
          cat ./distributions.txt

      - name: 🧩 Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mmdebstrap xz-utils curl jq binfmt-support qemu-user-static

      - name: 🏗️ Build RootFS for All Architectures
        run: |
          mkdir -p rootfs work distro-plugins

          DIST_NAME="ubuntu"
          DIST_VERSION="plucky"
          RELEASE_DIR="rootfs"

          ARCHS=("amd64" "arm64" "armhf" "i386" "riscv64")
          for ARCH in "${ARCHS[@]}"; do
            echo "============================="
            echo "🏗️ Building rootfs for ${ARCH}"
            echo "============================="

            case $ARCH in
              amd64)
                MIRROR="http://archive.ubuntu.com/ubuntu"
                ;;
              *)
                MIRROR="http://ports.ubuntu.com/ubuntu-ports"
                ;;
            esac

            ROOTFS_DIR="work/${DIST_NAME}-${DIST_VERSION}-${ARCH}"
            TARBALL="${RELEASE_DIR}/${DIST_NAME}-${DIST_VERSION}-${ARCH}.tar.xz"

            sudo rm -rf "${ROOTFS_DIR}" "${TARBALL}"

            sudo mmdebstrap \
              --mode=fakechroot \
              --variant=apt \
              --architectures=${ARCH} \
              --include="bash,apt,dialog,nano,wget,curl,tree,ca-certificates,apt-utils" \
              ${DIST_VERSION} \
              "${ROOTFS_DIR}" \
              "${MIRROR}"

            sudo tar -C "${ROOTFS_DIR}" -cJf "${TARBALL}" .
            SHA256=$(sha256sum "${TARBALL}" | awk '{print $1}')
            echo "✅ Built ${TARBALL} (${SHA256})"

            # Create distro plugin for each arch
            PLUGIN_FILE="distro-plugins/ubuntuc-${ARCH}.sh"
            cat > "${PLUGIN_FILE}" <<EOF
# Auto-generated Ubuntu ${DIST_VERSION} plugin for ${ARCH}
DISTRO_NAME="Ubuntu (${DIST_VERSION})"
DISTRO_COMMENT="Regular release (${DIST_VERSION})."

TARBALL_URL['${ARCH}']="https://github.com/${{ github.repository }}/releases/latest/download/${DIST_NAME}-${DIST_VERSION}-${ARCH}.tar.xz"
TARBALL_SHA256['${ARCH}']="${SHA256}"

distro_setup() {
    run_proot_cmd apt update -y
    run_proot_cmd apt upgrade -y
    run_proot_cmd apt install nano wget curl tree dialog apt-utils -y
    run_proot_cmd cp /etc/skel/.bashrc .
}
EOF
          done

      - name: 📦 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-rootfs
          path: rootfs/*.tar.xz

      - name: 📦 Upload Plugins
        uses: actions/upload-artifact@v4
        with:
          name: distro-plugins
          path: distro-plugins/*.sh

      - name: 🚀 Upload to Release
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/master'
        with:
          tag_name: "v${{ github.run_number }}"
          name: "RootFS Build ${{ github.run_number }}"
          files: |
            rootfs/*.tar.xz
            distro-plugins/*.sh
